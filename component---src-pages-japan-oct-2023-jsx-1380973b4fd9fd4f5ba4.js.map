{"version":3,"sources":["webpack:///./src/images/japan-oct-2023/info.js","webpack:///./src/pages/japan-oct-2023.jsx"],"names":["japanPhotoInformation","description","PhotosFlex","styled","Flex","withConfig","displayName","componentId","Box","_ref","theme","mediaQueries","tablet","_ref2","DateButton","button","props","fonts","mono","colors","lightGray","active","css","dates","JapanOct2023","_ref3","data","dateStr","setDateStr","useState","mainPhoto","setMainPhoto","photos","allPhotos","allFile","edges","i","length","name","node","date","split","unshift","image","getImage","childImageSharp","undefined","React","createElement","Layout","tab","SEO","title","Title","Text","map","index","key","onClick","boxWidth","justifyContent","style","columnGap","photo","GatsbyImage","alt","e","cursor"],"mappings":"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","file":"component---src-pages-japan-oct-2023-jsx-1380973b4fd9fd4f5ba4.js","sourcesContent":["export const japanPhotoInformation = {\n  \"10-omakase-tuna\": {\n    description: [\"Omakase at Ebisu Endou (the only sushi I ate this trip)\"],\n  },\n  \"12-pizza\": {\n    description: [\n      \"Savoy pizza, they did one with bluefin tuna but I think I prefer pepperoni\",\n    ],\n  },\n  \"15-goldfish\": {\n    description: [\n      \"We went to a goldfish aquarium art gallery (?) and now I'm weirdly invested in bubble eye goldfish\",\n    ],\n  },\n  \"16-friend\": {\n    description: [\"ハイキング中、友達になった\"],\n  },\n  \"16-sulfur1\": {\n    description: [\"Sulfur vents, it smelled pretty bad but looked pretty cool\"],\n  },\n  \"16-sulfur1\": {\n    description: [\"Sulfur vents, it smelled pretty bad but looked pretty cool\"],\n  },\n  \"20-buddha-statues\": {\n    description: [\n      \"This town had tons of spiders and I walked through so many webs to take this picture\",\n    ],\n  },\n  \"20-teemo\": {\n    description: [\"Looks like a certain yordle\"],\n  },\n  \"22-imperial-palace-run1\": {\n    description: [\"I can see why people enjoy running around the palace\"],\n  },\n  \"23-onigiri\": {\n    description: [\"Waited 2.5 hours for this onigiri, I think it was worth it\"],\n  },\n  \"25-plane-bento\": {\n    description: [\"Last meal from Japan, ate a bento on the plane\"],\n  },\n}\n","import React, { useState } from \"react\"\nimport { graphql } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport styled, { css } from \"styled-components\"\n\nimport Layout from \"../components/layouts/layout\"\nimport SEO from \"../components/seo\"\n\nimport { japanPhotoInformation } from \"../images/japan-oct-2023/info\"\n\nimport { Box, Flex, Heading, Text, Title } from \"../components/basics\"\n\nconst PhotosFlex = styled(Flex)`\n  display: flex;\n  justify-content: flex-start;\n  column-gap: 10px;\n  flex-direction: row;\n  width: 100%;\n  margin-top: 10px;\n\n  ${Box} {\n    width: 20%;\n    ${({ theme }) => `${theme.mediaQueries.tablet} {\n      width: 100%;\n    }`}\n  }\n\n  ${({ theme }) => `${theme.mediaQueries.tablet} {\n    margin-top: 0px;\n    flex-direction: column;\n    row-gap: 10px;\n    width: 10%;\n  }`}\n`\n\nconst DateButton = styled.button`\n  font-family: ${props => props.theme.fonts.mono};\n  background-color: white;\n  color: ${props => props.theme.colors.lightGray};\n  padding: 0;\n  margin-right: 10px;\n  cursor: pointer;\n  border: none;\n\n  &:hover {\n    font-weight: 700;\n    text-decoration: none;\n  }\n\n  ${props =>\n    props.active &&\n    css`\n      font-weight: 700;\n    `}\n`\n\nconst dates = [\n  \"10\",\n  \"11\",\n  \"12\",\n  \"13\",\n  \"14\",\n  \"15\",\n  \"16\",\n  \"18\",\n  \"20\",\n  \"21\",\n  \"23\",\n  \"24\",\n  \"25\",\n]\n\nexport default function JapanOct2023({ data }) {\n  const [dateStr, setDateStr] = useState(\"10\")\n  const [mainPhoto, setMainPhoto] = useState({})\n\n  var photos = {}\n  var allPhotos = data.allFile.edges\n\n  for (var i = 0; i < allPhotos.length; i++) {\n    var name = allPhotos[i].node.name\n    var date = name.split(\"-\")[0]\n    if (date in photos) {\n      photos[date].unshift({\n        name: name,\n        image: getImage(allPhotos[i].node.childImageSharp),\n      })\n    } else {\n      photos[date] = [\n        { name: name, image: getImage(allPhotos[i].node.childImageSharp) },\n      ]\n    }\n  }\n\n  if (mainPhoto.name === undefined) {\n    setMainPhoto(photos[dateStr][0])\n  }\n\n  return (\n    <Layout tab=\"Japan (Oct) 2023\">\n      <SEO title=\"Japan (Oct) 2023\" />\n      <Title>Japan (Oct) 2023</Title>\n      <Text description>Unplanned trip back to Japan</Text>\n      {/* DATE BUTTONS */}\n      {dates.map((date, index) => {\n        return (\n          <DateButton\n            key={date}\n            onClick={() => {\n              setDateStr(date)\n              setMainPhoto({})\n            }}\n            active={dateStr == date}\n          >\n            {date}\n          </DateButton>\n        )\n      })}\n\n      {/* MAIN FLEX: picture + notes on the side */}\n      <Flex\n        boxWidth=\"70%\"\n        photos\n        justifyContent=\"flex-start\"\n        style={{ columnGap: \"10px\" }}\n      >\n        <Box photo>\n          <GatsbyImage\n            alt={mainPhoto.name}\n            key={mainPhoto.name}\n            image={mainPhoto.image}\n          />\n          {/* DATE AND DESCRIPTION */}\n          {japanPhotoInformation[mainPhoto.name] !== undefined && (\n            <Text>{japanPhotoInformation[mainPhoto.name].description}</Text>\n          )}\n        </Box>\n\n        <PhotosFlex photos>\n          {photos[dateStr].map((photo, index) => {\n            return (\n              <Box\n                key={photo.name}\n                photo\n                onClick={e => {\n                  setMainPhoto(photo)\n                }}\n                style={{ cursor: \"pointer\" }}\n              >\n                <GatsbyImage\n                  alt={photo.name}\n                  key={photo.name}\n                  image={photo.image}\n                />\n              </Box>\n            )\n          })}\n        </PhotosFlex>\n      </Flex>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query JapanOct2023Photos {\n    allFile(\n      filter: {\n        extension: { regex: \"/(jpg)|(jpeg)|(png)/\" }\n        dir: { regex: \"/images/japan-oct-2023/\" }\n      }\n    ) {\n      edges {\n        node {\n          id\n          name\n          childImageSharp {\n            gatsbyImageData(placeholder: BLURRED, formats: [AUTO, WEBP, AVIF])\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}