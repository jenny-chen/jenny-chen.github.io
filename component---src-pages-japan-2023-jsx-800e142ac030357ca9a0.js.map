{"version":3,"sources":["webpack:///./src/components/photoModal.jsx","webpack:///./node_modules/topojson-client/src/identity.js","webpack:///./node_modules/topojson-client/src/transform.js","webpack:///./node_modules/topojson-client/src/feature.js","webpack:///./node_modules/topojson-client/src/reverse.js","webpack:///./src/components/maps/japan-2023.js","webpack:///./src/images/japan-2023/info.js","webpack:///./src/pages/japan-2023.jsx"],"names":["Modal","styled","Box","withConfig","displayName","componentId","props","hidden","ModalContent","_ref","theme","mediaQueries","tablet","PhotoModal","React","createElement","onClick","e","setModalHidden","stopPropagation","Flex","boxWidth","GatsbyImage","alt","photo","name","key","image","Heading","Text","info","location","date","description","map","line","index","x","transform","identity","x0","y0","kx","scale","ky","dx","translate","dy","input","i","j","n","length","output","Array","o","topology","objects","type","features","geometries","id","bbox","properties","geometry","transformPoint","arcs","arc","points","pop","a","k","push","t","array","reverse","point","p","ring","polygon","coordinates","JapanMap2023","_Component","_this","call","getLoc","state","loc","drawChart","div","d3","select","remove","height","node","offsetHeight","width","offsetWidth","console","log","svg","append","attr","projection","center","path","selected","title_loc","visited","then","data","topojson","japan","selectAll","enter","style","nam","includes","on","setLoc","newLoc","newLocJa","nam_ja","setState","loc_ja","this","title_loc_ja","setTitleLoc","_inheritsLoose","_proto","prototype","componentDidMount","window","addEventListener","bind","render","Fragment","className","Component","japanPhotoInformation","tokyo_potato","tokyo_ramen","tokyo_park","tokyo_tonkatsu","tokyo_matcha","osaka_capitalism","kyoto_knife","kyoto_ramen","kyoto_soba","kyoto_railway","kyoto_arashiyama","kyoto_tofu_1","kyoto_tofu_2","kyoto_bamboo","kyoto_unagi","nagano_onroute","nagano_zenkoji_1","nagano_zenkoji_2","nagano_monke","nagano_cherry","nagano_race","hokkai_onroute","hokkai_sushi_guy","hokkai_goryoku","hokkai_me","Japan2023","useState","openPhoto","setOpenPhoto","modalHidden","photos","allPhotos","allFile","edges","place","split","getImage","childImageSharp","Layout","tab","SEO","title","Title","toLowerCase","cursor","text","newModalHidden"],"mappings":"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","file":"component---src-pages-japan-2023-jsx-800e142ac030357ca9a0.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nimport {\n  Box,\n  Flex,\n  Heading,\n  Text,\n} from \"../components/basics\"\n\nconst Modal = styled(Box)`\n  position: fixed;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: ${props => props.hidden ? \"0\" : \"1\"};\n  transition: all 0.2s ease-in-out;\n  pointer-events: ${props => props.hidden ? \"none\" : \"auto\"};\n`\n\nconst ModalContent = styled(Box)`\n  width: 50%;\n  background-color: white;\n  padding: 35px;\n\n  ${({ theme }) => `${theme.mediaQueries.tablet} {\n    padding: 50px;\n  }`}\n`\n\nexport default function PhotoModal(props) {\n  return (\n    <Modal hidden={props.hidden} onClick={e => props.setModalHidden(true)}>\n      <ModalContent onClick={e => e.stopPropagation()}>\n        <Flex boxWidth=\"48%\">\n          <Box>\n            <GatsbyImage\n              alt={props.photo.name}\n              key={props.photo.name}\n              image={props.photo.image}\n            />\n          </Box>\n          <Box>\n            <Flex boxWidth=\"50%\">\n              <Box>\n                <Heading>location</Heading>\n                <Text>{props.info.location}</Text>\n              </Box>\n              <Box>\n                <Heading>date</Heading>\n                <Text>{props.info.date}</Text>\n              </Box>\n            </Flex>\n            <div>\n              <Heading>description</Heading>\n              {props.info.description.map((line, index) => {\n                return <Text key={index}>{line}</Text>\n              })}\n            </div>\n          </Box>\n          </Flex>\n      </ModalContent>\n    </Modal>\n  )\n}\n","export default function (x) {\n  return x;\n}","import identity from \"./identity.js\";\nexport default function (transform) {\n  if (transform == null) return identity;\n  var x0,\n    y0,\n    kx = transform.scale[0],\n    ky = transform.scale[1],\n    dx = transform.translate[0],\n    dy = transform.translate[1];\n  return function (input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2,\n      n = input.length,\n      output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n}","import reverse from \"./reverse.js\";\nimport transform from \"./transform.js\";\nexport default function (topology, o) {\n  if (typeof o === \"string\") o = topology.objects[o];\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function (o) {\n      return feature(topology, o);\n    })\n  } : feature(topology, o);\n}\nfunction feature(topology, o) {\n  var id = o.id,\n    bbox = o.bbox,\n    properties = o.properties == null ? {} : o.properties,\n    geometry = object(topology, o);\n  return id == null && bbox == null ? {\n    type: \"Feature\",\n    properties: properties,\n    geometry: geometry\n  } : bbox == null ? {\n    type: \"Feature\",\n    id: id,\n    properties: properties,\n    geometry: geometry\n  } : {\n    type: \"Feature\",\n    id: id,\n    bbox: bbox,\n    properties: properties,\n    geometry: geometry\n  };\n}\nexport function object(topology, o) {\n  var transformPoint = transform(topology.transform),\n    arcs = topology.arcs;\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n  function point(p) {\n    return transformPoint(p);\n  }\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n    return points;\n  }\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n    return points;\n  }\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n  function geometry(o) {\n    var type = o.type,\n      coordinates;\n    switch (type) {\n      case \"GeometryCollection\":\n        return {\n          type: type,\n          geometries: o.geometries.map(geometry)\n        };\n      case \"Point\":\n        coordinates = point(o.coordinates);\n        break;\n      case \"MultiPoint\":\n        coordinates = o.coordinates.map(point);\n        break;\n      case \"LineString\":\n        coordinates = line(o.arcs);\n        break;\n      case \"MultiLineString\":\n        coordinates = o.arcs.map(line);\n        break;\n      case \"Polygon\":\n        coordinates = polygon(o.arcs);\n        break;\n      case \"MultiPolygon\":\n        coordinates = o.arcs.map(polygon);\n        break;\n      default:\n        return null;\n    }\n    return {\n      type: type,\n      coordinates: coordinates\n    };\n  }\n  return geometry(o);\n}","export default function (array, n) {\n  var t,\n    j = array.length,\n    i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}","import React, { Component } from \"react\"\nimport * as d3 from \"d3\"\nimport * as topojson from \"topojson-client\"\nimport \"./japan.css\"\n\nclass JapanMap2023 extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      title_loc: \"Japan\",\n      title_loc_ja: \"日本\",\n      loc: \"Japan\",\n      loc_ja: \"日本\",\n    }\n  }\n\n  getLoc = () => {\n    return this.state.loc\n  }\n\n  componentDidMount() {\n    this.drawChart()\n    window.addEventListener(\"resize\", this.drawChart.bind(this))\n  }\n\n  drawChart = () => {\n    const div = d3.select(\"#japan\")\n    div.select(\"svg\").remove()\n\n    const height = +div.node().offsetHeight\n    const width = +div.node().offsetWidth\n    console.log(\"height: \", height)\n    console.log(\"width: \", width)\n\n    const svg = div.append(\"svg\").attr(\"width\", width).attr(\"height\", height)\n\n    var projection = d3\n      .geoMercator()\n      .scale(1200)\n      .center([137, 37])\n      .translate([width / 2, 250])\n\n    var path = d3.geoPath().projection(projection)\n\n    var selected = this.state.title_loc\n\n    const visited = [\n      \"Tokyo To\",\n      \"Kyoto Fu\",\n      \"Osaka Fu\",\n      \"Nagano Ken\",\n      \"Hokkai Do\",\n    ]\n    const selectedColor = \"#FFD148\"\n    const visitedColor = \"#f5d1c6\"\n    const nonVisitedColor = \"white\"\n\n    const setLoc = (newLoc, newLocJa) => {\n      this.setState({ loc: newLoc, loc_ja: newLocJa })\n    }\n\n    const setTitleLoc = (newLoc, newLocJa) => {\n      this.setState({ title_loc: newLoc })\n      this.setState({ title_loc_ja: newLocJa })\n      this.props.setLoc(newLoc)\n      selected = this.state.title_loc\n    }\n\n    const resetLoc = () => {\n      this.setState({\n        loc: this.state.title_loc,\n        loc_ja: this.state.title_loc_ja,\n      })\n    }\n\n    d3.json(\"/json/topojapan.json\").then(data => {\n      var features = topojson.feature(data, data.objects.japan).features\n\n      svg\n        .selectAll(\"path\")\n        .data(features)\n        .enter()\n        .append(\"path\")\n        .attr(\"d\", path)\n        .attr(\"stroke\", \"black\")\n        .style(\"stroke-width\", \"0.6\")\n        .style(\"fill\", function (e) {\n          if (selected === e.properties.nam) {\n            return selectedColor\n          } else if (visited.includes(e.properties.nam)) {\n            return visitedColor\n          } else {\n            return nonVisitedColor\n          }\n        })\n        .on(\"mouseover\", function (e) {\n          setLoc(e.properties.nam, e.properties.nam_ja)\n          if (visited.includes(e.properties.nam)) {\n            d3.select(this).style(\"fill\", \"#d9bbb2\")\n          } else {\n            d3.select(this).style(\"fill\", \"lightgrey\")\n          }\n        })\n        .on(\"mouseout\", function (e) {\n          if (e.properties.nam === selected) {\n            d3.select(this).style(\"fill\", selectedColor)\n          } else if (visited.includes(e.properties.nam)) {\n            d3.select(this).style(\"fill\", visitedColor)\n          } else {\n            d3.select(this).style(\"fill\", nonVisitedColor)\n          }\n          resetLoc()\n        })\n        .on(\"click\", function (e) {\n          if (visited.includes(e.properties.nam)) {\n            svg.selectAll(\"path\").style(\"fill\", function (e) {\n              if (visited.includes(e.properties.nam)) {\n                return visitedColor\n              } else {\n                return nonVisitedColor\n              }\n            })\n            setTitleLoc(e.properties.nam, e.properties.nam_ja)\n            d3.select(this).style(\"fill\", selectedColor)\n          }\n        })\n    })\n  }\n\n  render() {\n    return (\n      <>\n        <div id=\"japan-labels\">\n          <p id=\"english-label\">{this.state.loc}</p>\n          <p id=\"japanese-label\">{this.state.loc_ja}</p>\n        </div>\n        <div id=\"japan\" className=\"mapDiv\"></div>\n      </>\n    )\n  }\n}\n\nexport default JapanMap2023\n","export const japanPhotoInformation = {\n  tokyo_potato: {\n    date: \"2023-04-17\",\n    location: \"Ginza, Tokyo\",\n    description: [\n      \"The sweetest sweet potato I've ever had. Roasted inside these big clay pots.\",\n    ],\n  },\n  tokyo_ramen: {\n    date: \"2023-04-27\",\n    location: \"Ginza Hachigo, Tokyo\",\n    description: [\n      \"Waited in line for like 2.5 hours for this Michelin starred ramen. Worth it for the experience.\",\n    ],\n  },\n  tokyo_park: {\n    date: \"2023-04-27\",\n    location: \"Chibiya Park, Chiyoda, Tokyo\",\n    description: [\"Reminded me of that movie, The Garden of Words\"],\n  },\n  tokyo_tonkatsu: {\n    date: \"2023-04-27\",\n    location: \"Tonkatsu Aoki, Tokyo\",\n    description: [\"That's tonkatsu alright\"],\n  },\n  tokyo_matcha: {\n    date: \"2023-04-27\",\n    location: \"Suzukien Asakusa, Tokyo\",\n    description: [\"Only got the second strongest matcha\"],\n  },\n\n  osaka_capitalism: {\n    date: \"2023-04-18\",\n    location: \"Dotonburi, Osaka\",\n    description: [\"Lots of capitalism.\"],\n  },\n\n  kyoto_knife: {\n    date: \"2023-04-18\",\n    location: \"Hayakawa Hamonoten, Kyoto\",\n    description: [\n      \"Bought a nakiri knife from this shop and got it engraved with my last name. The man running the shop was so kind, gave me cookies and an umbrella because it started raining while I was in there 🥺\",\n    ],\n  },\n  kyoto_ramen: {\n    date: \"2023-04-18\",\n    location: \"Kyoto\",\n    description: [\"One of many ramen bowls this trip.\"],\n  },\n  kyoto_soba: {\n    date: \"2023-04-18\",\n    location: \"Honke Owariya, Kyoto\",\n    description: [\"Soba set. Duck soba, as usual.\"],\n  },\n  kyoto_soba: {\n    date: \"2023-04-19\",\n    location: \"Honke Owariya, Kyoto\",\n    description: [\"Soba set. Duck soba, as usual.\"],\n  },\n  kyoto_railway: {\n    date: \"2023-04-20\",\n    location: \"Kyoto Railway Museum, Kyoto\",\n    description: [\"I like trains.\"],\n  },\n  kyoto_arashiyama: {\n    date: \"2023-04-20\",\n    location: \"Arashiyama, Kyoto\",\n    description: [\"View upon arriving at the station by Arashiyama.\"],\n  },\n  kyoto_tofu_1: {\n    date: \"2023-04-20\",\n    location: \"Shoraian, Kyoto\",\n    description: [\n      \"One part of the tofu kaiseki set.\",\n      \"From top to bottom, left to right: veggie tofu, potato, sesame tofu, yuba skin roll, tofu skin roll, bamboo shoot, konjac, squid, sawara, mushroom with tofu\",\n    ],\n  },\n  kyoto_tofu_2: {\n    date: \"2023-04-20\",\n    location: \"Shoraian, Kyoto\",\n    description: [\"The dessert portion of the set, still tofu themed!\"],\n  },\n  kyoto_bamboo: {\n    date: \"2023-04-20\",\n    location: \"Arashiyama, Kyoto\",\n    description: [\"Bamboo forest, hard to capture how far they stretch up.\"],\n  },\n  kyoto_unagi: {\n    date: \"2023-04-21\",\n    location: \"大國屋 鰻兵衞, Kyoto\",\n    description: [\"Closed out Kyoto with an unagi don.\"],\n  },\n\n  nagano_onroute: {\n    date: \"2023-04-21\",\n    location: \"Kyoto → Nagano\",\n    description: [\"View on the train from Kyoto to Nagano.\"],\n  },\n  nagano_zenkoji_1: {\n    date: \"2023-04-22\",\n    location: \"Zenkoji, Nagano\",\n    description: [\"Zenkoji temple.\"],\n  },\n  nagano_zenkoji_2: {\n    date: \"2023-04-22\",\n    location: \"Zenkoji, Nagano\",\n    description: [\"Another one of Zenkoji temple.\"],\n  },\n  nagano_monke: {\n    date: \"2023-04-22\",\n    location: \"Snow Monkey Park, Nagano\",\n    description: [\n      \"Unfortunately, there were no monkes when we went to the park.\",\n    ],\n  },\n  nagano_cherry: {\n    date: \"2023-04-23\",\n    location: \"Olympic Park, Nagano\",\n    description: [\n      \"Cherry blossoms we saw as we walked to the marathon finish line to keep cheering.\",\n    ],\n  },\n  nagano_race: {\n    date: \"2023-04-23\",\n    location: \"Olympic Park, Nagano\",\n    description: [\"Yay end of Nagano marathon.\"],\n  },\n\n  hokkai_onroute: {\n    date: \"2023-04-24\",\n    location: \"Nagano → Hokkaido\",\n    description: [\"Tonkatsu bento on route to Hokkaido.\"],\n  },\n  hokkai_sushi_guy: {\n    date: \"2023-04-24\",\n    location: \"Hakodate\",\n    description: [\n      \"I'm still not really sure why they thought this guy would be a good mascot.\",\n    ],\n  },\n  hokkai_goryoku: {\n    date: \"2023-04-25\",\n    location: \"Goryoku Park, Hakodate\",\n    description: [\n      \"A little late in the season, but the park was still full of cherry blossoms.\",\n    ],\n  },\n  hokkai_me: {\n    date: \"2023-04-25\",\n    location: \"Goryoku Park, Hakodate\",\n    description: [\"Still can't take proper photos.\"],\n  },\n}\n","import React, { useState } from \"react\"\nimport { graphql } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nimport Layout from \"../components/layouts/layout\"\nimport SEO from \"../components/seo\"\nimport JapanMap2023 from \"../components/maps/japan-2023\"\nimport PhotoModal from \"../components/photoModal\"\n\nimport { japanPhotoInformation } from \"../images/japan-2023/info\"\n\nimport { Box, Flex, Link, Text, Title } from \"../components/basics\"\n\nexport default function Japan2023({ data }) {\n  const [loc, setLoc] = useState(\"Japan\")\n  const [openPhoto, setOpenPhoto] = useState({})\n  const [modalHidden, setModalHidden] = useState(true)\n\n  var photos = {}\n  var allPhotos = data.allFile.edges\n\n  for (var i = 0; i < allPhotos.length; i++) {\n    var name = allPhotos[i].node.name\n    var place = name.split(\"_\")[0]\n    if (place in photos) {\n      photos[place].push({\n        name: name,\n        image: getImage(allPhotos[i].node.childImageSharp),\n      })\n    } else {\n      photos[place] = [\n        { name: name, image: getImage(allPhotos[i].node.childImageSharp) },\n      ]\n    }\n  }\n\n  console.log(openPhoto.name)\n\n  return (\n    <Layout tab=\"Japan 2023\">\n      <SEO title=\"Japan 2023\" />\n      <Title>Japan 2023</Title>\n      <Text description>April 2023</Text>\n\n      <JapanMap2023 setLoc={newLoc => setLoc(newLoc)} />\n\n      <Flex boxWidth=\"49.5%\" photos>\n        {loc !== \"Japan\" &&\n          photos[loc.split(\" \")[0].toLowerCase()].map((photo, index) => {\n            return (\n              <Box\n                key={photo.name}\n                photo\n                onClick={e => {\n                  setOpenPhoto(photo)\n                  setModalHidden(false)\n                }}\n              >\n                <GatsbyImage\n                  alt={photo.name}\n                  key={photo.name}\n                  image={photo.image}\n                  style={{ cursor: \"pointer\" }}\n                />\n              </Box>\n            )\n          })}\n      </Flex>\n\n      <PhotoModal\n        text=\"modal text\"\n        hidden={modalHidden}\n        photo={openPhoto}\n        setModalHidden={newModalHidden => setModalHidden(newModalHidden)}\n        info={\n          japanPhotoInformation[openPhoto.name] || {\n            date: \"\",\n            location: \"\",\n            description: [\"\"],\n          }\n        }\n      />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query Japan2023Photos {\n    allFile(\n      filter: {\n        extension: { regex: \"/(jpg)|(jpeg)|(png)/\" }\n        dir: { regex: \"/images/japan-2023/\" }\n      }\n    ) {\n      edges {\n        node {\n          id\n          name\n          childImageSharp {\n            gatsbyImageData(placeholder: BLURRED, formats: [AUTO, WEBP, AVIF])\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}